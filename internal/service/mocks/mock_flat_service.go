// Code generated by MockGen. DO NOT EDIT.
// Source: flat_service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	model "houseService/internal/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFlat is a mock of Flat interface.
type MockFlat struct {
	ctrl     *gomock.Controller
	recorder *MockFlatMockRecorder
}

// MockFlatMockRecorder is the mock recorder for MockFlat.
type MockFlatMockRecorder struct {
	mock *MockFlat
}

// NewMockFlat creates a new mock instance.
func NewMockFlat(ctrl *gomock.Controller) *MockFlat {
	mock := &MockFlat{ctrl: ctrl}
	mock.recorder = &MockFlatMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFlat) EXPECT() *MockFlatMockRecorder {
	return m.recorder
}

// FlatCreate mocks base method.
func (m *MockFlat) FlatCreate(arg0 *model.Flat) (*model.Flat, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FlatCreate", arg0)
	ret0, _ := ret[0].(*model.Flat)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FlatCreate indicates an expected call of FlatCreate.
func (mr *MockFlatMockRecorder) FlatCreate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FlatCreate", reflect.TypeOf((*MockFlat)(nil).FlatCreate), arg0)
}

// FlatUpdate mocks base method.
func (m *MockFlat) FlatUpdate(arg0 *model.FlatUpdate) (*model.Flat, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FlatUpdate", arg0)
	ret0, _ := ret[0].(*model.Flat)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FlatUpdate indicates an expected call of FlatUpdate.
func (mr *MockFlatMockRecorder) FlatUpdate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FlatUpdate", reflect.TypeOf((*MockFlat)(nil).FlatUpdate), arg0)
}

// HouseFlatsGet mocks base method.
func (m *MockFlat) HouseFlatsGet(arg0 int, arg1 string) ([]*model.Flat, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HouseFlatsGet", arg0, arg1)
	ret0, _ := ret[0].([]*model.Flat)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HouseFlatsGet indicates an expected call of HouseFlatsGet.
func (mr *MockFlatMockRecorder) HouseFlatsGet(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HouseFlatsGet", reflect.TypeOf((*MockFlat)(nil).HouseFlatsGet), arg0, arg1)
}
